# InfluxDB 2.x Helm Chart Values
# https://github.com/influxdata/helm-charts/tree/master/charts/influxdb2

# Admin user configuration
adminUser:
  organization: "homelab"
  bucket: "proxmox"
  user: "admin"
  retention_policy: "90d"
  # Password will be auto-generated if not set
  # existingSecret: influxdb-auth

# Persistence configuration
persistence:
  enabled: true
  storageClass: "local-path"
  size: 50Gi
  mountPath: /var/lib/influxdb2
  useExisting: false

# Resource limits
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 1000m
    memory: 2Gi

# Service configuration
service:
  type: ClusterIP
  port: 8086
  targetPort: 8086
  annotations: {}
  labels: {}

# Ingress configuration
ingress:
  enabled: true
  className: "traefik"
  hostname: influxdb.sean.local
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  tls: true
  secretName: influxdb-tls

# Configure the InfluxDB v2 API
config:
  bolt-path: /var/lib/influxdb2/influxd.bolt
  engine-path: /var/lib/influxdb2/engine
  http-bind-address: ":8086"
  reporting-disabled: false
  
# Liveness and readiness probes
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

# Pod security context
securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  runAsNonRoot: true

# Additional environment variables
env: []

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Additional volumes
volumes: []

# Additional volume mounts
mountPoints: []

# Service account
serviceAccount:
  create: true
  name: ""
  annotations: {}

# Annotations for the pod
podAnnotations: {}

# Labels for the pod
podLabels: {}

# Enable pod disruption budget
pdb:
  create: false
  minAvailable: 1

# Metrics for Prometheus monitoring
metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    namespace: ""
    additionalLabels:
      prometheus: kube-prometheus